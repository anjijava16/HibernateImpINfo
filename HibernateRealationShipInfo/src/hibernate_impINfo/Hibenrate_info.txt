PoJO              Done
Database          Done

In 3.x Verion HBM file (hibernate mapping) (Employee.hbm.xml)
we can use 2 ways either we use HBM file or without HBM (we will annotation conectps)
XML (adv with ) interoperation Lang indepedent (We can able to connect any tech with help of XML files)
Java object   ====================>>>>            XML(HBM File)        <<<<<<<====== Database(table,pro,function)
Java Object(class)Employee               ==============================>>> Table Name Database TBL_Employee
Vairable         empName                             ====> Column Name   eName(ColumnName)
Variable         empDesg    =>Column Name   eDesg(ColumnName)
XML Tech
<hibernate-mapping>
<class name="Employee" TableName="TBL_Employee" schema="Iwinner/indutech">
<propertiy name="empName" DBName="eName"/>
<propertiy name="empDesg" DBName="eDesg"/>
</class>
</hibernate-mapping>

HBM    ===> Done

cfg (hibernate-cfg.xml):
             
       <root>
 
 i)Connection Details::
              <DriverName>com.mysql.Driver<DriverName>
       <URL>jdbc:mysqk:localhost:3306:iwinner</URL>
       <UseName>root<UseName>
       <password>root</password>

 ii) Hibernate predefined  Operations
         <show_sql>true</show_sql>
  <hiberate_query>create<hiberate_query>
  =========== (10 Operations)
 iii) Our HBM FIles details

     <hbm_details>employee.hbm.xml</hbm_details>

 
       </root>
   
Client (Test Code) ::
import org.hibenrate.cfg.Configuration;
import org.hibenrate.cfg.ConfigurationImpl;
import org.hibenrate.cfg.XXXX;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
public class TestExample{
public static void main(String args[]){
//POJO,HBM,CFG


Configuration con=new Configuration();
conf.configure("hibernate-cfg.xml");
SessionFactory sessionFactory=con.sessionFactoryImpl();
Session session=sessionFactory.openSession();


CFG ---> HBM  ---> Java Class ,DB TableName


}

}

Dialat : Depent on our database
MYSQL :: mySQL Dialect
Oracle :: oracle di

